// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: iam.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AttrectoTest.Common.Grpc.Iam {
  public static partial class IamService
  {
    static readonly string __ServiceName = "iam.IamService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.PingRequest> __Marshaller_iam_PingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.PingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.PingResponse> __Marshaller_iam_PingResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.PingResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest> __Marshaller_iam_GetUserIdByUserNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse> __Marshaller_iam_GetUserIdByUserNameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest> __Marshaller_iam_GetUserDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse> __Marshaller_iam_GetUserDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AttrectoTest.Common.Grpc.Iam.PingRequest, global::AttrectoTest.Common.Grpc.Iam.PingResponse> __Method_Ping = new grpc::Method<global::AttrectoTest.Common.Grpc.Iam.PingRequest, global::AttrectoTest.Common.Grpc.Iam.PingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_iam_PingRequest,
        __Marshaller_iam_PingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse> __Method_GetUserIdByUserName = new grpc::Method<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserIdByUserName",
        __Marshaller_iam_GetUserIdByUserNameRequest,
        __Marshaller_iam_GetUserIdByUserNameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse> __Method_GetUserData = new grpc::Method<global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserData",
        __Marshaller_iam_GetUserDataRequest,
        __Marshaller_iam_GetUserDataResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AttrectoTest.Common.Grpc.Iam.IamReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IamService</summary>
    [grpc::BindServiceMethod(typeof(IamService), "BindService")]
    public abstract partial class IamServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AttrectoTest.Common.Grpc.Iam.PingResponse> Ping(global::AttrectoTest.Common.Grpc.Iam.PingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse> GetUserIdByUserName(global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse> GetUserData(global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IamServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Ping, serviceImpl.Ping)
          .AddMethod(__Method_GetUserIdByUserName, serviceImpl.GetUserIdByUserName)
          .AddMethod(__Method_GetUserData, serviceImpl.GetUserData).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IamServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Ping, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AttrectoTest.Common.Grpc.Iam.PingRequest, global::AttrectoTest.Common.Grpc.Iam.PingResponse>(serviceImpl.Ping));
      serviceBinder.AddMethod(__Method_GetUserIdByUserName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserIdByUserNameResponse>(serviceImpl.GetUserIdByUserName));
      serviceBinder.AddMethod(__Method_GetUserData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AttrectoTest.Common.Grpc.Iam.GetUserDataRequest, global::AttrectoTest.Common.Grpc.Iam.GetUserDataResponse>(serviceImpl.GetUserData));
    }

  }
}
#endregion
